<tests>
    <group name="lola core">
        <setup><![CDATA[
            var obj = {
                depth: 0,
                child:{
                    depth: 1,
                    grandchild:{
                        depth: 2,
                        greatgrandchild:{
                            depth: 3
                        }
                    }
                }
            };
        ]]></setup>

        <test name="lola.getPackage: parent" expected="0" type="int"><![CDATA[ lola.getPackage(obj,"").depth ]]></test>
        <test name="lola.getPackage: child" expected="1" type="int"><![CDATA[ lola.getPackage(obj,"child").depth ]]></test>
        <test name="lola.getPackage: grandchild" expected="2" type="int"><![CDATA[ lola.getPackage(obj,"child.grandchild").depth ]]></test>

        <test name="lola.hasPackage: greatgrandchild" expected="true" type="bool"><![CDATA[ lola.hasPackage(obj,"child.grandchild.greatgrandchild") ]]></test>
        <test name="lola.hasPackage: stepchild" expected="false" type="bool"><![CDATA[ lola.hasPackage(obj,"child.grandchild.stepchild") ]]></test>

        <test name="lola.extend: overwrites" expected="1" type="int"><![CDATA[
            (function(){
                var obj2 = {};
                lola.extend( obj2, obj, true, false );
                return obj2.child.depth;
            })();
        ]]></test>
        <test name="lola.extend: no overwrites" expected="99" type="int"><![CDATA[
            (function(){
                var obj2 = {child:{},depth:99};
                lola.extend( obj2, obj, false, false );
                return obj2.depth;
            })();
        ]]></test>

        <test name="lola.evaluate: script node count" expected="true" type="bool"><![CDATA[
            (function(){
                var preCount = document.getElementsByName("script").length;
                lola.evaluate("(function(){ var a = 1; var b = 2; var c = a + b;})()");
                lola.evaluate("(function(){ var a = 1; var b = 2; var c = a + b;})()");
                lola.evaluate("(function(){ var a = 1; var b = 2; var c = a + b;})()");
                var postCount = document.getElementsByName("script").length;

                return preCount === postCount;
            })();
        ]]></test>

        <test name="lola.evaluate: script evaluates" expected="12" type="int"><![CDATA[
            (function( x ){
                return 3*x;
            })(4);
        ]]></test>

        <test name="lola.loadScript: script loads and evaluates" expected="12" type="int" async="true"><![CDATA[
            (function(){
                lola.loadScript("support/load.js", function(){


                    lola.test.continue();
                });
            })();
        ]]></test>



        <teardown><![CDATA[ delete window['obj'];]]></teardown>
    </group>
</tests>