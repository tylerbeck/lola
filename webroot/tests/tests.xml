<tests>
    <!-- lola core tests -->
    <script name="setup core tests"><![CDATA[
        var obj = {
            depth: 0,
            child:{
                depth: 1,
                grandchild:{
                    depth: 2,
                    greatgrandchild:{
                        depth: 3
                    }
                }
            }
        };
    ]]></script>

    <test name="lola.getPackage: parent" equals="0" type="int"><![CDATA[ lola.getPackage(obj,"").depth ]]></test>
    <test name="lola.getPackage: child" equals="1" type="int"><![CDATA[ lola.getPackage(obj,"child").depth ]]></test>
    <test name="lola.getPackage: grandchild" equals="2" type="int"><![CDATA[ lola.getPackage(obj,"child.grandchild").depth ]]></test>
    <test name="lola.hasPackage: greatgrandchild" equals="true" type="bool"><![CDATA[ lola.hasPackage(obj,"child.grandchild.greatgrandchild") ]]></test>
    <test name="lola.hasPackage: stepchild" equals="false" type="bool"><![CDATA[ lola.hasPackage(obj,"child.grandchild.stepchild") ]]></test>
    <test name="lola.extend: overwrites" equals="1" type="int"><![CDATA[
        (function(){
            var obj2 = {};
            lola.extend( obj2, obj, true, false );
            return obj2.child.depth;
        })();
    ]]></test>
    <test name="lola.extend: no overwrites" equals="99" type="int"><![CDATA[
        (function(){
            var obj2 = {child:{},depth:99};
            lola.extend( obj2, obj, false, false );
            return obj2.depth;
        })();
    ]]></test>
    <test name="lola.evaluate: script node count" equals="true" type="bool"><![CDATA[
        (function(){
            var preCount = document.getElementsByName("script").length;
            lola.evaluate("(function(){ var a = 1; var b = 2; var c = a + b;})()");
            lola.evaluate("(function(){ var a = 1; var b = 2; var c = a + b;})()");
            lola.evaluate("(function(){ var a = 1; var b = 2; var c = a + b;})()");
            var postCount = document.getElementsByName("script").length;

            return preCount === postCount;
        })();
    ]]></test>
    <test name="lola.evaluate: script evaluates" equals="12" type="int"><![CDATA[
        (function( x ){
            return 3*x;
        })(4);
    ]]></test>
    <test name="lola.loadScript: script loads and evaluates" equals="12" type="int" async="true"><![CDATA[
        (function(){
            lola.loadScript("support/load.js", function(){
                var value = test(3);
                delete window['test'];
                delete window['tmpVal'];
                lola.test.current.setResult( value );
            });
        })();
    ]]></test>



    <script name="teardown core tests"><![CDATA[ delete window['obj'];]]></script>
</tests>